                                      UNDERSTAND THE DATA AND SET UP SUBPLOTS
  1. Add import codecademylib to the top of script.py. This will allow for your plots to render in our browser.
//
import codecademylib
from matplotlib import pyplot as plt
import codecademylib
months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
visits_per_month = [9695, 7909, 10831, 12942, 12495, 16794, 14161, 12762, 12777, 12439, 10309, 8724]
  2. We have provided some data in different lists in script.py. Look through these lists and try to understand what each one represents.
  3. Create a figure of width 12 and height 8.
//
plt.figure(figsize=(12,8))
  4. We are going to make two charts in one figure, laid out side-by-side. In other words, the figure will have one row and two columns, like this: two plots in one row. Write 
the command to create the left subplot (the one that would correspond to the plot with a star in our example figure). Save this subplot in a variable called ax1.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
plt.show()
  5. Write the command to create the right subplot (the one that would correspond to the plot with a square in our example figure). Save this subplot in a variable called ax2.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
ax2 = plt.subplot(1,2,2)
plt.show()

                                      PAGE VISITS OVER TIME
  6. In the left subplot, we are going to plot the total page visits over the past year as a line. First, let’s create the list of x-values, which is range(len(months)). Store this in 
a variable called x_values. Make sure this happens after the line where you created ax1, but before the line where you’ve created ax2, so that the plot goes in the subplot on the left.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
x_values = range(len(months))
ax2 = plt.subplot(1,2,2)
plt.show()
  7. Plot the total page visits against these x_values as a line.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
x_values = range(len(months))
plt.plot(x_values, visits_per_month)
ax2 = plt.subplot(1,2,2)
plt.show()
  8. Give the line markers that will help show each month as a distinct value.
//
plt.plot(x_values, visits_per_month, marker='*')
  9. Label the x-axis and y-axis with descriptive titles of what they measure.
//
plt.plot(x_values, visits_per_month, marker='*')
plt.xlabel('Months')
plt.ylabel('Visits per month')
  10. Set the x-axis ticks to be the x_values.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
x_values = range(len(months))
plt.plot(x_values, visits_per_month, marker='*')
plt.xlabel('Months')
plt.ylabel('Visits per month')
ax1.set_xticks(x_values)
ax2 = plt.subplot(1,2,2)
plt.show()
  11. Label the x-axis tick labels to be the names stored in the months list.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
x_values = range(len(months))
plt.plot(x_values, visits_per_month, marker='*')
plt.xlabel('Months')
plt.ylabel('Visits per month')
ax1.set_xticks(x_values)
ax1.set_xticklabels(months)
plt.show()

                                      PLOTTING MULTIPLE LIME SPECIES
  12. In the subplot on the right, we are going to plot three lines on the same set of axes. The x-values for all three lines will correspond to the months, so we can use the list 
of x_values we used for the last plot. On one plot, create the three lines:
number of key limes sold vs x_values
number of Persian limes sold vs x_values
number of blood limes sold vs x_values
Make sure this happens after the line where you created ax2, so that it goes in the subplot on the right.
//
ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month)
plt.plot(x_values, persian_limes_per_month)
plt.plot(x_values, blood_limes_per_month)
plt.show()
  13. Give each line a specific color of your choosing.
//
ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month, color='darkred')
plt.plot(x_values, persian_limes_per_month, color='purple')
plt.plot(x_values, blood_limes_per_month, color='green')
plt.show()
  14. Add a legend to differentiate the lines, labeling each lime species.
//
ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month, color='darkred')
plt.plot(x_values, persian_limes_per_month, color='purple')
plt.plot(x_values, blood_limes_per_month, color='green')
plt.legend(['Limes', 'Persian limes', 'Blood limes'])
  15. Set the x-axis ticks to be the x_values, and the tick labels to be the months list.
//
ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month, color='darkred')
plt.plot(x_values, persian_limes_per_month, color='purple')
plt.plot(x_values, blood_limes_per_month, color='green')
plt.legend(['Limes', 'Persian limes', 'Blood limes'])
ax2.set_xticks(x_values)
ax2.set_xticklabels(months)
plt.show()
  15. Set the x-axis ticks to be the x_values, and the tick labels to be the months list.
//
ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month, color='darkred')
plt.plot(x_values, persian_limes_per_month, color='purple')
plt.plot(x_values, blood_limes_per_month, color='green')
plt.legend(['Limes', 'Persian limes', 'Blood limes'])
ax2.set_xticks(x_values)
ax2.set_xticklabels(months)
plt.show()

                                      LABELING AND SAVING
  16. Add a title to each of the two plots you’ve created, and adjust the margins to make the text you’ve added look better.
//
plt.figure(figsize=(12,8))
ax1 = plt.subplot(1,2,1)
x_values = range(len(months))
plt.plot(x_values, visits_per_month, marker='*')
plt.xlabel('Months')
plt.ylabel('Visits')
ax1.set_xticks(x_values)
ax1.set_xticklabels(months)
plt.title('Visits per month')


ax2 = plt.subplot(1,2,2)
plt.plot(x_values, key_limes_per_month, color='darkred')
plt.plot(x_values, persian_limes_per_month, color='purple')
plt.plot(x_values, blood_limes_per_month, color='green')
plt.legend(['Limes', 'Persian limes', 'Blood limes'])
ax2.set_xticks(x_values)
ax2.set_xticklabels(months)
plt.title('Limes sold per month')

plt.subplots_adjust(wspace=0.1)
plt.show()
  17. Now, save your figure as a png with a descriptive file name.
//
...
plt.subplots_adjust(wspace=0.1)
plt.show()
plt.savefig('Store_visits_and_sales.png')
